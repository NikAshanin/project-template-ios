import LeadKit
import SwiftDate

enum {{project_name}}DateFormat: String, DateFormat {

    case defaultDate = "MM/dd/yyyy"

    var stringToDateFormat: StringToDateStyles {
        return .custom(rawValue)
    }

    var dateToStringFormat: DateToStringStyles {
        return .custom(rawValue)
    }

}

final class {{project_name}}DateFormattingService: DateFormattingService, Singleton {

    typealias DateFormatType = {{project_name}}DateFormat

    let currentRegion: Region = .local

    static let shared = {{project_name}}DateFormattingService()

    private init() {
        //
    }

}

extension DateRepresentable {

    func formatted(as format: {{project_name}}DateFormat) -> String {
        return {{project_name}}DateFormattingService.string(from: self, format: format)
    }

}

extension String {

    func asDate(using format: {{project_name}}DateFormat) -> DateInRegion? {
        return {{project_name}}DateFormattingService.date(from: self, format: format)
    }

}
